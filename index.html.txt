<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Madanur Consumer Information</title>
  <style>
    /* Same styles as your Apps Script HTML */
    html,body{height:100%;margin:0;font-family:Arial,Helvetica,sans-serif;background:transparent}
    .card{background:#fff;border-radius:8px;box-shadow:0 4px 18px rgba(0,0,0,.15);padding:clamp(18px,4vw,30px);max-width:480px;margin:20px auto;box-sizing:border-box}
    h2{margin:0 0 20px;color:#004c97;text-align:center;font-size:clamp(1.2rem,4vw,1.5rem)}
    label{font-weight:600;color:#004c97;display:block;text-align:center;margin-bottom:6px}
    .search-row{display:flex;flex-wrap:wrap;justify-content:center;gap:10px;margin-bottom:20px}
    input[type=number], input[type=text], select{flex:1 1 160px;padding:12px 14px;font-size:16px;border:1px solid #ccc;border-radius:4px;background:#fff;box-sizing:border-box}
    button{flex:0 1 120px;padding:12px 18px;font-size:16px;border:none;border-radius:4px;background:#004c97;color:#fff;cursor:pointer;transition:background-color 0.2s}
    button:hover{background:#003875}
    table{width:100%;border-collapse:separate;border-spacing:0 8px}
    th{white-space:nowrap;background:#004c97;color:#fff;text-align:left;padding:10px 8px;font-weight:600;font-size:clamp(.75rem,2.5vw,.9rem)}
    td{padding:10px 8px;border-bottom:1px solid #eee;font-size:clamp(.75rem,2.5vw,.9rem)}
    .error{color:#b00;padding:12px;text-align:center;font-weight:600}
    .mapLink{color:#004c97;text-decoration:underline;font-weight:600}
    .hidden{display:none}
    #tabs{display:flex;justify-content:center;gap:10px;max-width:480px;margin:20px auto 0;padding:0 18px}
    #tabs button{flex:1;background:#e0e0e0;color:#004c97;font-weight:600;border:1px solid #ccc;box-shadow:0 2px 4px rgba(0,0,0,0.1)}
    #tabs button.active{background:#004c97;color:#fff;border-color:#004c97}
    .service-tag{background:#e6f0ff;color:#004c97;padding:6px 10px;border-radius:4px;cursor:pointer;font-size:0.9rem;font-weight:500;border:1px solid #cce0ff;margin:4px}
  </style>
</head>
<body onload="loadHistory()">
  <div id="tabs">
    <button id="tab-consumer" class="active" onclick="switchTab('consumer')">Consumer Search</button>
    <button id="tab-transformer" onclick="switchTab('transformer')">Transformer Lookup</button>
  </div>

  <div id="consumer-search-view" class="card">
    <h2>Consumer Search</h2>
    <label>Search by Service No</label>
    <div class="search-row">
      <input type="number" id="ssNo" placeholder="Short Service No" />
      <select id="ssNoHistory" onchange="handleHistorySelect('ssNo')">
        <option value="">Last Consumer Searches</option>
      </select>
      <button onclick="mockSearch()">Search</button>
    </div>
    <div id="result"></div>
  </div>

  <div id="transformer-lookup-view" class="card hidden">
    <h2>Transformer Lookup</h2>
    <label>Search by Transformer No</label>
    <div class="search-row">
      <input type="text" id="transformerNo" placeholder="Transformer No (e.g., TR10)" />
      <select id="transformerNoHistory" onchange="handleHistorySelect('transformerNo')">
        <option value="">Last Transformer Searches</option>
      </select>
      <button onclick="mockTransformerSearch()">Find Services</button>
    </div>
    <div id="transformer-result"></div>
  </div>

  <script>
    // Mock data for demo
    const mockConsumerDB = {
      12345: { name: "Ravi Kumar", address: "12/3, Main Road, Madanur", map: "https://maps.google.com/?q=12.34,78.90" },
      54321: { name: "Lakshmi Devi", address: "45/A, Temple Street, Madanur", map: "https://maps.google.com/?q=12.35,78.91" }
    };

    const mockTransformerDB = {
      "TR10": ["10001", "10002", "10003"],
      "TR20": ["20001", "20002"]
    };

    function mockSearch() {
      const val = document.getElementById('ssNo').value.trim();
      const result = document.getElementById('result');
      if (!val) return result.innerHTML = '<div class="error">Enter a Short Service No</div>';
      const data = mockConsumerDB[val];
      if (!data) return result.innerHTML = '<div class="error">No record found</div>';
      result.innerHTML = `
        <table>
          <tr><th>Name</th><td>${data.name}</td></tr>
          <tr><th>Address</th><td>${data.address}</td></tr>
          <tr><th>Map</th><td><a class="mapLink" href="${data.map}" target="_blank">View Location</a></td></tr>
        </table>`;
      addSearchToHistory('ssNo', 'consumerHistory');
    }

    function mockTransformerSearch() {
      const val = document.getElementById('transformerNo').value.trim().toUpperCase();
      const result = document.getElementById('transformer-result');
      if (!val) return result.innerHTML = '<div class="error">Enter a Transformer No</div>';
      const services = mockTransformerDB[val];
      if (!services) return result.innerHTML = `<div class="error">No services found for ${val}</div>`;
      result.innerHTML = `<div><strong>Services under ${val}:</strong></div>` +
        services.map(s => `<button class="service-tag" onclick="mockSearchFromTag('${s}')">${s}</button>`).join('');
      addSearchToHistory('transformerNo', 'transformerHistory');
    }

    function mockSearchFromTag(ssNo) {
      document.getElementById('ssNo').value = ssNo;
      switchTab('consumer');
      mockSearch();
    }

    // History helpers
    function loadHistory() {
      populateDropdown('ssNoHistory', 'consumerHistory');
      populateDropdown('transformerNoHistory', 'transformerHistory');
    }
    function populateDropdown(id, key) {
      const sel = document.getElementById(id);
      const hist = JSON.parse(localStorage.getItem(key) || '[]');
      sel.innerHTML = '<option value="">Last Searches</option>' +
        hist.map(v => `<option value="${v}">${v}</option>`).join('');
    }
    function addSearchToHistory(inputId, key) {
      const val = document.getElementById(inputId).value.trim();
      if (!val) return;
      const hist = JSON.parse(localStorage.getItem(key) || '[]').filter(v => v !== val);
      hist.unshift(val);
      localStorage.setItem(key, JSON.stringify(hist.slice(0, 5)));
      populateDropdown(inputId + 'History', key);
    }
    function handleHistorySelect(id) {
      const sel = document.getElementById(id + 'History');
      document.getElementById(id).value = sel.value;
      sel.value = '';
      if (id === 'ssNo') mockSearch(); else mockTransformerSearch();
    }
    function switchTab(tab) {
      document.getElementById('consumer-search-view').classList.toggle('hidden', tab !== 'consumer');
      document.getElementById('transformer-lookup-view').classList.toggle('hidden', tab !== 'transformer');
      document.getElementById('tab-consumer').classList.toggle('active', tab === 'consumer');
      document.getElementById('tab-transformer').classList.toggle('active', tab === 'transformer');
    }
  </script>
</body>
</html>
